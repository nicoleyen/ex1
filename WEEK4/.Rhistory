geom_boxplot() + coord_flip() +
labs( y = 'age', x = 'gender',
title = 'Gender and AgeAtAdverseEvent relationship Box Plot')
with(afeg,
tapply(AgeAtAdverseEventInYears, Gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(AgeAtAdverseEventInYears ~ Gender, data = afeg)
t.test(AgeAtAdverseEventInYears ~ Gender, data = afeg)
t.test(AgeAtAdverseEventInYears ~ Gender, data = afeg, var.equal = TRUE)
afe2 %>%
group_by(IndustryName) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(IndustryName = reorder(IndustryName,Count)) %>%
head(5) %>%
ggplot(aes(x = IndustryName,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "orange") +
geom_text(aes(x = IndustryName, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Industry',
y = 'Count',
title = 'Industry and Count') +
coord_flip() +
theme_bw()
library(ggplot2)
ggplot(data = afeg,
aes(x = IndustryName, y = AgeAtAdverseEventInYears)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
geom_hline(yintercept = mean(afeg$AgeAtAdverseEventInYears) ,
linetype = 'dotted') +
labs(x = 'Industry Product Name', y = 'Age At Adverse Event') +
coord_flip()
anova(m1 <- lm(AgeAtAdverseEventInYears ~ IndustryName, data = afeg))
afei <- filter(afeg, IndustryName %in% c("Vit/Min/Prot/Unconv Diet(Human/Animal)","Fishery/Seafood Prod","Cosmetics","Vegetables/Vegetable Products
","Nuts/Edible Seed"))
ggplot(data = afei,
aes(group = IndustryName,
y = AgeAtAdverseEventInYears, x = Gender)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = IndustryName,
y = AgeAtAdverseEventInYears, x =  Gender),
method = 'lm', se = F) +
facet_grid( . ~  IndustryName) +
labs(x = 'IndustryName', y = 'AgeAtAdverseEventInYears')
anova(m2 <- update(m1, . ~ . +
Gender, data = afeg))
anova(m3 <- update(m2, . ~ . - IndustryName,  data = afeg))
res_lm <- lapply(list(m1, m2, m3), summary)
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
anova(m3, m2)
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1, m2)
library(coefplot)
(m1 <- lm(AgeAtAdverseEventInYears ~ IndustryName, data = afe2))
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 年齡')
fit_m2 <- data.frame(afeg[, c(7, 10, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
ggplot(data = fit_m2, aes(x = AgeAtAdverseEventInYears , group = IndustryName)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(afeg, tapply(AgeAtAdverseEventInYears,IndustryName, mean))), linetype = 'dotted')+
facet_grid(IndustryName ~ .) +
scale_x_continuous(breaks = seq(0, 100, by = 10))+
labs(x = 'Age', y = '機率密度')
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.15, .8))
require(lattice)
qqmath(~ scale(resid) | IndustryName, data = fit_m2, type = c('p', 'g', 'r'),
xlab = '常態位數', ylab = '標準化殘差', layout = c(2, 3),
pch = '.', cex = 2)
require(MASS)
ggplot(data = fit_m2, aes(x = fitted, y = scale(resid), group = IndustryName )) +
geom_point(pch = 20, size = 1) +
stat_smooth(method = 'rlm', se = F) +
facet_grid(IndustryName ~ .) +
labs(x = '年齡預測值', y = '標準化殘差')
ggplot(data = fit_m2, aes(x = infl, y = scale(resid), group = IndustryName)) +
geom_text(aes(label = rownames(fit_m2)), cex = 2) +
geom_hline(yintercept = 0, linetype = 'dotted') +
facet_grid(IndustryName ~ .) +
labs(x = '影響值', y = '標準化殘差')
summary(influence(m2)$hat)
afeg$ReportNo <- as.numeric(as.character(afeg$ReportNo))
afeg$PRI_FDA.Industry.Code <- as.numeric(as.character(afeg$PRI_FDA.Industry.Code))
sapply(afeg, class)
dta_age <- afeg[, c("AgeAtAdverseEventInYears","PRI_FDA.Industry.Code","ReportNo")]
colMeans(dta_age)
library(heplots)
scatterplotMatrix(~ AgeAtAdverseEventInYears + PRI_FDA.Industry.Code + ReportNo, data= dta_age,
pch = '.', cex = 3, smooth = FALSE, reg.line = FALSE, ellipse = TRUE,
diagonal = 'none', lower.panel = NULL)
library(corrplot)
corrplot(cor(dta_age), method = 'ellipse', order = 'hclust', addrect = 4,
type = 'upper', tl.pos = 'tp')
corrplot(cor(dta_age), add = TRUE, type = 'lower', method = 'number',
order = 'hclust', col = 'black', diag = FALSE, tl.pos = 'n', cl.pos = 'n')
summary(m4 <- lm(AgeAtAdverseEventInYears ~ PRI_FDA.Industry.Code + ReportNo, data = dta_age))
coefplot(m4, predictors = c("ReportNo","PRI_FDA.Industry.Code","AgeAtAdverseEventInYears"),
xlab = '估計值', ylab = '迴歸變項(去除截距)', title = '反應變項是age')
library(effects)
plot(allEffects(m4), main = '', ylim = c(550, 670), grid = T)
library(lm.beta)
summary(lm.beta(m4))
summary(m5 <- update(m4, . ~ . - math.input , data = dta_age))
anova(m5, m4)
summary(m5 <- update(m4, . ~ . - ReportNo , data = dta_age))
summary(m5 <- update(m4, . ~ . - PRI_FDA.Industry.Code , data = dta_age))
summary(m5 <- update(m4, . ~ . - ReportNo , data = dta_age))
summary(m5 <- update(m4, . ~ . - PRI_FDA.Industry.Code , data = dta_age))
setwd("~/GitHub/ex1/WEEK4")
library(readr)
library(lattice)
library(tidyverse)
library(stringr)
library(lubridate)
library(DT)
rm(list=ls())
AdverseFoodEvents = read_csv("adversefoodevent_data.csv")
AdverseFoodEvents = AdverseFoodEvents %>%
rename(ReportNo = `RA_Report #`) %>%
rename(IndustryName = `PRI_FDA Industry Name`) %>%
rename(AgeUnit = `CI_Age Unit`) %>%
rename(AgeAtAdverseEvent = `CI_Age at Adverse Event`) %>%
rename(Gender = `CI_Gender`) %>%
rename(Outcomes = `AEC_One Row Outcomes`) %>%
rename(Symptoms = `SYM_One Row Coded Symptoms`)
TransformIntoYears = function(ds)
{if(!is.na(ds["AgeAtAdverseEvent"]))
{ x = as.numeric(ds["AgeAtAdverseEvent"])
ds["AgeAtAdverseEvent"] = as.numeric(ds["AgeAtAdverseEvent"])
if(ds["AgeUnit"] == "Month(s)")
{ds["AgeAtAdverseEventInYears"] = x/12}
else if (ds["AgeUnit"] == "Weeks(s)")
{ds["AgeAtAdverseEventInYears"] = x*7/365}
else if (ds["AgeUnit"] == "Day(s)")
{ds["AgeAtAdverseEventInYears"] = x*1/365}
else if (ds["AgeUnit"] == "Decade(s)")
{ds["AgeAtAdverseEventInYears"] = x*10}  }
return(ds)}
AdverseFoodEvents = AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = AgeAtAdverseEvent)
AdverseFoodEvents$AgeAtAdverseEventInYears =
as.numeric(AdverseFoodEvents$AgeAtAdverseEventInYears)
AdverseFoodEvents = sapply(AdverseFoodEvents,TransformIntoYears)
AdverseFoodEvents = as.data.frame(AdverseFoodEvents)
colnames(AdverseFoodEvents)
library(readr)
library(lattice)
library(tidyverse)
library(stringr)
library(lubridate)
library(DT)
rm(list=ls())
AdverseFoodEvents = read_csv("adversefoodevent_data.csv")
AdverseFoodEvents = AdverseFoodEvents %>%
rename(ReportNo = `RA_Report #`) %>%
rename(IndustryName = `PRI_FDA Industry Name`) %>%
rename(AgeUnit = `CI_Age Unit`) %>%
rename(AgeAtAdverseEvent = `CI_Age at Adverse Event`) %>%
rename(Gender = `CI_Gender`) %>%
rename(Outcomes = `AEC_One Row Outcomes`) %>%
rename(Symptoms = `SYM_One Row Coded Symptoms`)
TransformIntoYears = function(ds)
{if(!is.na(ds["AgeAtAdverseEvent"]))
{ x = as.numeric(ds["AgeAtAdverseEvent"])
ds["AgeAtAdverseEvent"] = as.numeric(ds["AgeAtAdverseEvent"])
if(ds["AgeUnit"] == "Month(s)")
{ds["AgeAtAdverseEventInYears"] = x/12}
else if (ds["AgeUnit"] == "Weeks(s)")
{ds["AgeAtAdverseEventInYears"] = x*7/365}
else if (ds["AgeUnit"] == "Day(s)")
{ds["AgeAtAdverseEventInYears"] = x*1/365}
else if (ds["AgeUnit"] == "Decade(s)")
{ds["AgeAtAdverseEventInYears"] = x*10}  }
return(ds)}
AdverseFoodEvents = AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = AgeAtAdverseEvent)
AdverseFoodEvents$AgeAtAdverseEventInYears =
as.numeric(AdverseFoodEvents$AgeAtAdverseEventInYears)
AdverseFoodEvents = sapply(AdverseFoodEvents,TransformIntoYears)
AdverseFoodEvents = as.data.frame(AdverseFoodEvents)
colnames(AdverseFoodEvents)
summary(afe2)
library(readr)
library(lattice)
library(tidyverse)
library(stringr)
library(lubridate)
library(DT)
rm(list=ls())
AdverseFoodEvents = read_csv("adversefoodevent_data.csv")
AdverseFoodEvents = AdverseFoodEvents %>%
rename(ReportNo = `RA_Report #`) %>%
rename(IndustryName = `PRI_FDA Industry Name`) %>%
rename(AgeUnit = `CI_Age Unit`) %>%
rename(AgeAtAdverseEvent = `CI_Age at Adverse Event`) %>%
rename(Gender = `CI_Gender`) %>%
rename(Outcomes = `AEC_One Row Outcomes`) %>%
rename(Symptoms = `SYM_One Row Coded Symptoms`)
TransformIntoYears = function(ds)
{if(!is.na(ds["AgeAtAdverseEvent"]))
{ x = as.numeric(ds["AgeAtAdverseEvent"])
ds["AgeAtAdverseEvent"] = as.numeric(ds["AgeAtAdverseEvent"])
if(ds["AgeUnit"] == "Month(s)")
{ds["AgeAtAdverseEventInYears"] = x/12}
else if (ds["AgeUnit"] == "Weeks(s)")
{ds["AgeAtAdverseEventInYears"] = x*7/365}
else if (ds["AgeUnit"] == "Day(s)")
{ds["AgeAtAdverseEventInYears"] = x*1/365}
else if (ds["AgeUnit"] == "Decade(s)")
{ds["AgeAtAdverseEventInYears"] = x*10}  }
return(ds)}
AdverseFoodEvents = AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = AgeAtAdverseEvent)
AdverseFoodEvents$AgeAtAdverseEventInYears =
as.numeric(AdverseFoodEvents$AgeAtAdverseEventInYears)
AdverseFoodEvents = sapply(AdverseFoodEvents,TransformIntoYears)
AdverseFoodEvents = as.data.frame(AdverseFoodEvents)
colnames(AdverseFoodEvents)
afe <- data.frame(AdverseFoodEvents)
na.omit(afe)
afe2 <- na.omit(afe)
summary(afe2)
afe <- data.frame(AdverseFoodEvents)
na.omit(afe)
afe2 <- na.omit(afe)
summary(afe2)
head(afe2)
str(afe2)
afe <- data.frame(AdverseFoodEvents)
afeg <- filter(afe2, Gender %in% c("Male","Female")) %>%
mutate(AgeAtAdverseEventInYears= as.numeric(AgeAtAdverseEventInYears))
library(ggplot2)
ggplot(data = afeg, aes(x = Gender, y = AgeAtAdverseEventInYears)) +
geom_boxplot() + coord_flip() +
labs( y = 'age', x = 'gender',
title = 'Gender and AgeAtAdverseEvent relationship Box Plot')
with(afeg,
tapply(AgeAtAdverseEventInYears, Gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
with(afeg,
tapply(AgeAtAdverseEventInYears, Gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(AgeAtAdverseEventInYears ~ Gender, data = afeg)
t.test(AgeAtAdverseEventInYears ~ Gender, data = afeg, var.equal = TRUE)
afe2 %>%
group_by(IndustryName) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(IndustryName = reorder(IndustryName,Count)) %>%
head(5) %>%
ggplot(aes(x = IndustryName,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "orange") +
geom_text(aes(x = IndustryName, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Industry',
y = 'Count',
title = 'Industry and Count') +
coord_flip() +
theme_bw()
library(ggplot2)
ggplot(data = afeg,
aes(x = IndustryName, y = AgeAtAdverseEventInYears)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
geom_hline(yintercept = mean(afeg$AgeAtAdverseEventInYears) ,
linetype = 'dotted') +
labs(x = 'Industry Product Name', y = 'Age At Adverse Event') +
coord_flip()
library(ggplot2)
ggplot(data = afeg,
aes(x = IndustryName, y = AgeAtAdverseEventInYears)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
geom_hline(yintercept = mean(afeg$AgeAtAdverseEventInYears) ,
linetype = 'dotted') +
labs(x = 'Industry Product Name', y = 'Age At Adverse Event') +
coord_flip()
anova(m1 <- lm(AgeAtAdverseEventInYears ~ IndustryName, data = afeg))
afei <- filter(afeg, IndustryName %in% c("Vit/Min/Prot/Unconv Diet(Human/Animal)","Fishery/Seafood Prod","Cosmetics","Vegetables/Vegetable Products
","Nuts/Edible Seed"))
ggplot(data = afei,
aes(group = IndustryName,
y = AgeAtAdverseEventInYears, x = Gender)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = IndustryName,
y = AgeAtAdverseEventInYears, x =  Gender),
method = 'lm', se = F) +
facet_grid( . ~  IndustryName) +
labs(x = 'IndustryName', y = 'AgeAtAdverseEventInYears')
anova(m2 <- update(m1, . ~ . +
Gender, data = afeg))
anova(m3 <- update(m2, . ~ . - IndustryName,  data = afeg))
anova(m3, m2)
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
res_lm <- lapply(list(m1, m2, m3), summary)
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
library(coefplot)
(m1 <- lm(AgeAtAdverseEventInYears ~ IndustryName, data = afe2))
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 年齡')
fit_m2 <- data.frame(afeg[, c(7, 10, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
ggplot(data = fit_m2, aes(x = AgeAtAdverseEventInYears , group = IndustryName)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(afeg, tapply(AgeAtAdverseEventInYears,IndustryName, mean))), linetype = 'dotted')+
facet_grid(IndustryName ~ .) +
scale_x_continuous(breaks = seq(0, 100, by = 10))+
labs(x = 'Age', y = '機率密度')
ggplot(data = fit_m2, aes(x = AgeAtAdverseEventInYears , group = IndustryName)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(afeg, tapply(AgeAtAdverseEventInYears,IndustryName, mean))), linetype = 'dotted')+
facet_grid(IndustryName ~ .) +
scale_x_continuous(breaks = seq(0, 100, by = 10))+
labs(x = 'Age', y = '機率密度')
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.15, .8))
require(lattice)
qqmath(~ scale(resid) | IndustryName, data = fit_m2, type = c('p', 'g', 'r'),
xlab = '常態位數', ylab = '標準化殘差', layout = c(2, 3),
pch = '.', cex = 2)
require(MASS)
ggplot(data = fit_m2, aes(x = fitted, y = scale(resid), group = IndustryName )) +
geom_point(pch = 20, size = 1) +
stat_smooth(method = 'rlm', se = F) +
facet_grid(IndustryName ~ .) +
labs(x = '年齡預測值', y = '標準化殘差')
ggplot(data = fit_m2, aes(x = infl, y = scale(resid), group = IndustryName)) +
geom_text(aes(label = rownames(fit_m2)), cex = 2) +
geom_hline(yintercept = 0, linetype = 'dotted') +
facet_grid(IndustryName ~ .) +
labs(x = '影響值', y = '標準化殘差')
summary(influence(m2)$hat)
afeg$ReportNo <- as.numeric(as.character(afeg$ReportNo))
afeg$PRI_FDA.Industry.Code <- as.numeric(as.character(afeg$PRI_FDA.Industry.Code))
sapply(afeg, class)
dta_age <- afeg[, c("AgeAtAdverseEventInYears","PRI_FDA.Industry.Code","ReportNo")]
colMeans(dta_age)
library(heplots)
scatterplotMatrix(~ AgeAtAdverseEventInYears + PRI_FDA.Industry.Code + ReportNo, data= dta_age,
pch = '.', cex = 3, smooth = FALSE, reg.line = FALSE, ellipse = TRUE,
diagonal = 'none', lower.panel = NULL)
library(corrplot)
corrplot(cor(dta_age), method = 'ellipse', order = 'hclust', addrect = 4,
type = 'upper', tl.pos = 'tp')
corrplot(cor(dta_age), add = TRUE, type = 'lower', method = 'number',
order = 'hclust', col = 'black', diag = FALSE, tl.pos = 'n', cl.pos = 'n')
summary(m4 <- lm(AgeAtAdverseEventInYears ~ PRI_FDA.Industry.Code + ReportNo, data = dta_age))
summary(m4 <- lm(AgeAtAdverseEventInYears ~ PRI_FDA.Industry.Code + ReportNo, data = dta_age))
coefplot(m4, predictors = c("ReportNo","PRI_FDA.Industry.Code","AgeAtAdverseEventInYears"),
xlab = '估計值', ylab = '迴歸變項(去除截距)', title = '反應變項是age')
library(effects)
plot(allEffects(m4), main = '', ylim = c(550, 670), grid = T)
library(lm.beta)
summary(lm.beta(m4))
summary(m5 <- update(m4, . ~ . - PRI_FDA.Industry.Code , data = dta_age))
anova(m5, m4)
warnings()
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.14, .8))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .8))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .1))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.20, .9))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, 1))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, 12))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, 1.2))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, 1))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .99))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .95))
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .95), size=10)
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .95), width=10)
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .95), ){width=10}
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .95), ){width=10%}
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, .95) ){width=10%}
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.25, .95) )
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.25, .92) )
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, 1) )
ggplot(data = fit_m2, aes(x = scale(resid)), group = IndustryName ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = IndustryName)) +
scale_linetype_manual(values = 38:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.5, 1.1) )
ggplot(data = fit_m2, aes(x = AgeAtAdverseEventInYears , group = Gender)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(afeg, tapply(AgeAtAdverseEventInYears,IndustryName, mean))), linetype = 'dotted')+
facet_grid(IndustryName ~ .) +
scale_x_continuous(breaks = seq(0, 100, by = 10))+
labs(x = 'Age', y = '機率密度')
ggplot(data = fit_m2, aes(x = AgeAtAdverseEventInYears , group = IndustryName)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(afeg, tapply(AgeAtAdverseEventInYears,IndustryName, mean))), linetype = 'dotted')+
facet_grid(IndustryName ~ .) +
scale_x_continuous(breaks = seq(0, 100, by = 10))+
labs(x = 'Age', y = '機率密度')
require(lattice)
qqmath(~ scale(resid) | IndustryName, data = fit_m2, type = c('p', 'g', 'r'),
xlab = '常態位數', ylab = '標準化殘差', layout = c(2, 3),
pch = '.', cex = 2)
